on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: ci

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - name: Ubuntu Dependencies
      run: sudo apt-get install binutils-dev libunwind-dev

    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable
        components: rustfmt, clippy

    - uses: actions/checkout@master

    - name: Format
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust: [1.42.0, stable, beta, nightly]
        os: [ubuntu-latest, macOS-latest]
        sanitizer: [NONE]
        include:
          - rust: nightly
            os: ubuntu-latest
            sanitizer: address
          - rust: nightly
            os: macOS-latest
            sanitizer: address

    steps:
    - name: Ubuntu Dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install binutils-dev libunwind-dev

    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}

    - uses: actions/checkout@master

    - name: tests
      run: make test_bolero

    - name: libFuzzer
      run: make libfuzzer
      env:
        SANITIZER: ${{ matrix.sanitizer }}

    - name: honggfuzz
      run: make honggfuzz
      env:
        SANITIZER: ${{ matrix.sanitizer }}

    - name: afl
      run: make afl
      env:
        AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES: 1
        # SANITIZER: ${{ matrix.sanitizer }}

    - name: examples
      run: make test_examples
